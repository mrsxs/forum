<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.dao.PostDao">
    <resultMap id="postResultMap" type="com.song.domain.Post">
        <!-- 基本属性映射 -->
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="content" property="content" />
        <result column="clickCount" property="clickCount" />
        <result column="createdAt" property="createdAt" />
        <result column="updatedAt" property="updatedAt" />
        <result column="lastCommentAt" property="lastCommentAt" />
        <result column="commentCount" property="commentCount" /> <!-- 添加的回复数映射 -->

        <!-- 用户对象映射 -->
        <association property="user" javaType="com.song.domain.User">
            <id column="uid" property="id"/>
            <result column="user.username" property="username" />
            <result column="user.password" property="password" />
        </association>

        <!-- 最后回复用户对象映射 -->
        <association property="lastCommentUser" javaType="com.song.domain.User">
            <id column="lastCommentUser.id" property="id"/>
            <result column="lastCommentUser.username" property="username" />
            <!-- 如果您还需要其他用户信息，比如密码，您可以在这里添加 -->
        </association>
    </resultMap>


    <select id="SelectById" resultMap="postResultMap">
        SELECT
            p.id,
            p.title,
            p.content,
            p.clickCount,
            p.created_at as 'createdAt',
            p.updated_at as 'updatedAt',
            u.id as 'uid',
            u.username as 'user.username',
            (SELECT COUNT(c.id) FROM comments c WHERE c.pid = p.id) as 'commentCount',
            (SELECT c.created_at FROM comments c WHERE c.pid = p.id ORDER BY c.created_at DESC LIMIT 1) as 'lastCommentAt',
            (SELECT u2.username FROM comments c JOIN users u2 ON c.uid = u2.id WHERE c.pid = p.id ORDER BY c.created_at DESC LIMIT 1) as 'lastCommentUser.username'
        FROM
            posts p
                JOIN users u ON p.uid = u.id
        WHERE
            p.id = #{id}

    </select>

    <select id="selectAll" resultMap="postResultMap">
        SELECT
            p.id,
            p.title,
            p.content,
            p.clickCount,
            p.created_at as 'createdAt',
            p.updated_at as 'updatedAt',
            u.id as 'uid',
            u.username as 'user.username',
            (SELECT COUNT(c.id) FROM comments c WHERE c.pid = p.id) as 'commentCount',
            (SELECT c.created_at FROM comments c WHERE c.pid = p.id ORDER BY c.created_at DESC LIMIT 1) as 'lastCommentAt',
            (SELECT u2.username FROM comments c JOIN users u2 ON c.uid = u2.id WHERE c.pid = p.id ORDER BY c.created_at DESC LIMIT 1) as 'lastCommentUser.username'
        FROM
            posts p
                JOIN users u ON p.uid = u.id
    </select>

</mapper>
